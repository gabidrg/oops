diff --git a/includes/views/handlers/og_handler_field_og_membership_link_delete.inc b/includes/views/handlers/og_handler_field_og_membership_link_delete.inc
new file mode 100644
index 0000000..910a74b
--- /dev/null
+++ b/includes/views/handlers/og_handler_field_og_membership_link_delete.inc
@@ -0,0 +1,80 @@
+<?php
+
+/**
+ * @file
+ * Definition of og_handler_field_og_membership_link_delete.
+ */
+
+/**
+ * Field handler to present a link to delete membership.
+ *
+ * @ingroup views_field_handlers
+ */
+class og_handler_field_og_membership_link_delete extends views_handler_field_entity {
+
+  function construct() {
+    parent::construct();
+  }
+
+  function option_definition() {
+    $options = parent::option_definition();
+    $options['text'] = array('default' => '', 'translatable' => TRUE);
+    $options['destination'] = array('default' => FALSE, 'bool' => TRUE);
+    return $options;
+  }
+
+  function options_form(&$form, &$form_state) {
+    $form['text'] = array(
+      '#type' => 'textfield',
+      '#title' => t('Text to display'),
+      '#default_value' => $this->options['text'],
+    );
+    $form['destination'] = array(
+      '#type' => 'checkbox',
+      '#title' => t('Use destination'),
+      '#description' => t('Add destination to the link'),
+      '#default_value' => $this->options['destination'],
+      '#fieldset' => 'more',
+    );
+    parent::options_form($form, $form_state);
+  }
+
+  function query() {
+    $this->ensure_my_table();
+    $this->add_additional_fields();
+  }
+
+  function render($values) {
+    $value = $this->get_value($values, 'id');
+    return $this->render_link($this->sanitize_value($value), $values);
+  }
+
+  function render_link($data, $values) {
+    global $user;
+    $account = clone $user;
+
+    $this->options['alter']['make_link'] = TRUE;
+    $this->options['alter']['html'] = TRUE;
+
+    // Ensure user has access to delete this membership.
+    $og_membership = $this->get_value($values);
+    $group_type = $og_membership->group_type;
+    $gid = $og_membership->gid;
+    $group = entity_load_single($group_type, $gid);
+
+    if (!og_ui_user_access_group('manage members', $group_type, $gid) || $group->uid == $og_membership->etid) {
+      return;
+    }
+
+    $text = !empty($this->options['text']) ? $this->options['text'] : t('delete');
+    unset($this->options['alter']['fragment']);
+
+    if (!empty($this->options['destination'])) {
+      $this->options['alter']['query'] = drupal_get_destination();
+    }
+
+    $this->options['alter']['path'] = "group/" . $group_type . "/" . $gid  . "/admin/people/delete-membership/" . $og_membership->id;
+
+    return $text;
+  }
+}
diff --git a/includes/views/og.views.inc b/includes/views/og.views.inc
index 0def1f5..fbf6e49 100644
--- a/includes/views/og.views.inc
+++ b/includes/views/og.views.inc
@@ -86,7 +86,7 @@ class OgMembershipViewsController extends EntityDefaultViewsController {
       ),
     );
 
-    // Link to edit membership
+    // Link to edit membership.
     $data['og_membership']['edit_membership'] = array(
       'field' => array(
         'title' => t('Edit link'),
@@ -95,6 +95,15 @@ class OgMembershipViewsController extends EntityDefaultViewsController {
       ),
     );
 
+    // Link to delete membership.
+    $data['og_membership']['delete_membership'] = array(
+      'field' => array(
+        'title' => t('Delete link'),
+        'help' => t('Provide a simple link to delete the membership.'),
+        'handler' => 'og_handler_field_og_membership_link_delete',
+      ),
+    );
+
     return $data;
   }
 }
diff --git a/og.info b/og.info
index fd1acda..0a7dac6 100644
--- a/og.info
+++ b/og.info
@@ -30,6 +30,7 @@ files[] = includes/views/handlers/og_handler_field_prerender_list.inc
 files[] = includes/views/handlers/og_handler_field_user_roles.inc
 files[] = includes/views/handlers/og_handler_field_group_permissions.inc
 files[] = includes/views/handlers/og_handler_field_og_membership_link_edit.inc
+files[] = includes/views/handlers/og_handler_field_og_membership_link_delete.inc
 
 ; Views filters
 files[] = includes/views/handlers/og_handler_filter_group_audience_state.inc
diff --git a/og_ui/includes/views/og_ui.views_default.inc b/og_ui/includes/views/og_ui.views_default.inc
index fbf56f4..becaf9b 100644
--- a/og_ui/includes/views/og_ui.views_default.inc
+++ b/og_ui/includes/views/og_ui.views_default.inc
@@ -38,6 +38,8 @@ function og_ui_views_default_views() {
     'og_roles' => 'og_roles',
     'created' => 'created',
     'og_membership_request' => 'og_membership_request',
+    'edit_membership' => 'edit_membership',
+    'delete_membership' => 'edit_membership',
   );
   $handler->display->display_options['style_options']['default'] = 'name';
   $handler->display->display_options['style_options']['info'] = array(
@@ -79,6 +81,16 @@ function og_ui_views_default_views() {
       'separator' => '',
       'empty_column' => 0,
     ),
+    'edit_membership' => array(
+      'align' => '',
+      'separator' => ' ',
+      'empty_column' => 0,
+    ),
+    'delete_membership' => array(
+      'align' => '',
+      'separator' => '',
+      'empty_column' => 0,
+    ),
   );
   /* Header: OG membership: Group membership overview */
   $handler->display->display_options['header']['og_membership_overview']['id'] = 'og_membership_overview';
@@ -217,6 +229,13 @@ function og_ui_views_default_views() {
   $handler->display->display_options['fields']['edit_membership']['label'] = '';
   $handler->display->display_options['fields']['edit_membership']['element_label_colon'] = FALSE;
   $handler->display->display_options['fields']['edit_membership']['destination'] = TRUE;
+  /* Field: OG membership: Delete link */
+  $handler->display->display_options['fields']['delete_membership']['id'] = 'delete_membership';
+  $handler->display->display_options['fields']['delete_membership']['table'] = 'og_membership';
+  $handler->display->display_options['fields']['delete_membership']['field'] = 'delete_membership';
+  $handler->display->display_options['fields']['delete_membership']['relationship'] = 'og_membership_rel';
+  $handler->display->display_options['fields']['delete_membership']['label'] = '';
+  $handler->display->display_options['fields']['delete_membership']['element_label_colon'] = FALSE;
   /* Sort criterion: User: Name */
   $handler->display->display_options['sorts']['name']['id'] = 'name';
   $handler->display->display_options['sorts']['name']['table'] = 'users';
diff --git a/og_ui/og_ui.admin.inc b/og_ui/og_ui.admin.inc
index 925eb01..8fdc7b5 100644
--- a/og_ui/og_ui.admin.inc
+++ b/og_ui/og_ui.admin.inc
@@ -298,6 +298,13 @@ function og_ui_edit_membership($form, &$form_state, $group_type, $gid, $og_membe
     '#title' => t('User name'),
     '#markup' => $account->name,
   );
+  $form['og_user']['state'] = array(
+    '#type' => 'select',
+    '#title' => t('Status'),
+    '#description' => t('Change the current membership status.'),
+    '#options' => og_group_content_states(),
+    '#default_value' => $og_membership->state,
+  );
   if ($og_roles) {
     $form['og_user']['roles'] = array(
       '#type' => 'checkboxes',
@@ -307,9 +314,6 @@ function og_ui_edit_membership($form, &$form_state, $group_type, $gid, $og_membe
     );
   }
 
- // Add group membership form.
-  $values = array();
-
   // Add group membership form. We still don't have the user or state.
   $form_state['og_membership'] = $og_membership;
 
@@ -324,6 +328,14 @@ function og_ui_edit_membership($form, &$form_state, $group_type, $gid, $og_membe
   $form['actions'] = array('#type' => 'actions');
   $form['actions']['submit'] = array('#type' => 'submit', '#value' => t('Update membership'));
 
+  // You can't delete the group manager.
+  if ($group->uid != $account->uid) {
+    $form['actions']['delete'] = array(
+      '#type' => 'markup',
+      '#markup' => l(t('Delete'), 'group/node/' . $gid . '/admin/people/delete-membership/' . $og_membership->id),
+    );
+  }
+
   return $form;
 }
 
@@ -342,6 +354,7 @@ function og_ui_edit_membership_submit($form, &$form_state) {
   $group_type = $form_state['values']['group_type'];
   $gid = $form_state['values']['gid'];
   $og_membership = $form_state['og_membership'];
+  $og_membership->state = $form_state['values']['state'];
   field_attach_submit('og_membership', $og_membership, $form['membership_fields'], $form_state);
   $og_membership->save();
   $account = user_load($og_membership->etid);
@@ -360,7 +373,53 @@ function og_ui_edit_membership_submit($form, &$form_state) {
   drupal_set_message(t('The membership has been updated.'));
 }
 
+/**
+ * Delete a single membership from group.
+ */
+function og_ui_delete_membership($form, &$form_state, $group_type, $gid, $og_membership) {
+  og_set_breadcrumb($group_type, $gid, array(l(t('Group'), "$group_type/$gid/group")));
+  $group = entity_load_single($group_type, $gid);
+  $label = entity_label($group_type, $group);
+  $account = user_load($og_membership->etid);
+
+  // You can't delete the group manager.
+  if ($group->uid == $account->uid) {
+    $param = array(
+      '!people' => l(t('People'), 'group/' . $group_type . '/' . $gid . '/admin/people'),
+    );
+
+    return array(
+      array(
+        'message' => array(
+          '#type' => 'item',
+          '#markup' => t("You can't delete membership of the group manager. Back to !people managing.", $param),
+        ),
+      ),
+    );
+  }
+
+  // Add group membership form. We still don't have the user or state.
+  $form_state['og_membership'] = $og_membership;
+
+  return confirm_form($form,
+    t('Delete membership in group @group', array('@group' => $label)),
+    'group/' . $group_type . '/' . $gid . '/admin/people',
+    t('Are you sure you would like to delete the membership for the user @user', array('@user' => $account->name)),
+    t('Delete'),
+    t('Cancel')
+  );
+}
+
+/**
+ * Delete the membership.
+ */
+function og_ui_delete_membership_submit($form, &$form_state) {
+  $membership = $form_state['og_membership'];
+  $membership->delete();
+  $form_state['redirect'] = 'group/' . $membership->group_type . '/' . $membership->gid . '/admin/people';
 
+  drupal_set_message('The OG membership deleted successfully.');
+}
 
 /**
  * Form builder; OG user administration page.
diff --git a/og_ui/og_ui.module b/og_ui/og_ui.module
index cb830a7..b850e96 100644
--- a/og_ui/og_ui.module
+++ b/og_ui/og_ui.module
@@ -70,6 +70,17 @@ function og_ui_menu() {
     'file' => 'og_ui.admin.inc',
   );
 
+  // Delete a single membership.
+  $items['group/%/%/admin/people/delete-membership/%og_membership'] = array(
+    'title' => 'Delete',
+    'type' => MENU_CALLBACK,
+    'page callback' => 'drupal_get_form',
+    'page arguments' => array('og_ui_delete_membership', 1, 2, 6),
+    'access callback' => 'og_ui_user_access_group',
+    'access arguments' => array('manage members', 1, 2),
+    'file' => 'og_ui.admin.inc',
+  );
+
   // Permission administration pages.
   $items['group/%/%/admin/roles'] = array(
     'title callback' => 'og_ui_menu_title_callback',
